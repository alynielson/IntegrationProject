@model IntegrationProject.Models.Event

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>
<style>
    #map {
        height: 400px;
        width: 100%;
    }
</style>
<body>
   

<div class="col-md-6">
    <h4>Event</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>
        
        <dt>
            @Html.DisplayNameFor(model => model.Details)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Details)
        </dd>
        <dt>
            Owner
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ApplicationUser.Email)
        </dd>
        
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ApplicationUserId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
    
    <div class="col-md-6">
      <div id="map"></div>
    </div>
    <script>
        function initMap() {
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15,
                center: { lat: 43.031605, lng: -87.909850 }
            });
            var originMarker = new google.maps.Marker({ position: { lat: Number(@Model.Origin.Latitude), lng:Number(@Model.Origin.Longitude)}, map: map });
            var destinationMarker = new google.maps.Marker({ position: { lat: Number(@Model.Destination.Latitude), lng:Number(@Model.Destination.Longitude)}, map: map });
            directionsDisplay.setMap(map);
            var waypoints = [@Model.Waypoints.Select(waypoint => waypoint)];
            waypoints.forEach(function (waypoint) {
                new google.maps.maps.Marker({ position: { lat: Number(waypoint.Latitude), lng: Number(waypoint.Longitude) }, map: map });
            })

            var onChangeHandler = foreach;
            document.getElementById('start').addEventListener('change', onChangeHandler);
            document.getElementById('end').addEventListener('change', onChangeHandler);
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay) {
            directionsService.route({
                origin: document.getElementById('start').value,
                destination: document.getElementById('end').value,
                travelMode: 'Walking'
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
                });

        }
        initMap();
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=@($"{Credentials.GOOGLEAPI}")&callback=initMap">
    </script>
</body>

